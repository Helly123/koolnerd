{{ 'component-newsletter.css' | asset_url | stylesheet_tag }}
{{ 'newsletter-section.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="newsletter center {% if section.settings.full_width == false %}newsletter--narrow page-width{% endif %}" style="background:{{ section.settings.background_color }}; color:{{ section.settings.text_color }};">
  <div class="newsletter__wrapper content-container isolate{% if section.settings.full_width %} content-container--full-width{% endif %} section-{{ section.id }}-padding">
   <div class="grid grid--2-col-desktop grid--1-col-tablet-down">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when 'heading' -%}
        <div class="grid__item">
          {% assign heading = block.settings.heading %}
          {% assign number = heading | split: "||" %}
          {% assign extracted_number = number[1] %}
          {% capture left_to_spend %}
            <span id="dynamic-counter" data-count="{{ extracted_number }}" class="scroll-count-section"></span> 
          {% endcapture %}
          {% assign main_heading = heading | replace: "||" | replace: extracted_number, left_to_spend %}
          <h2 class="heading" {{ block.shopify_attributes }}>{{ main_heading }}</h2>
        </div>
        {%- when 'email_form' -%}
        {% if block.settings.HTML == blank %}
          <div {{ block.shopify_attributes }} class="grid__item">
            {% form 'customer', class: 'newsletter-form' %}
              <input type="hidden" name="contact[tags]" value="newsletter">
              <div class="newsletter-form__field-wrapper">
                <div class="field">
                  <input
                    id="NewsletterForm--{{ section.id }}"
                    type="email"
                    name="contact[email]"
                    class="field__input"
                    value="{{ form.email }}"
                    aria-required="true"
                    autocorrect="off"
                    autocapitalize="off"
                    autocomplete="email"
                    {% if form.errors %}
                      autofocus
                      aria-invalid="true"
                      aria-describedby="Newsletter-error--{{ section.id }}"
                    {% elsif form.posted_successfully? %}
                      aria-describedby="Newsletter-success--{{ section.id }}"
                    {% endif %}
                    placeholder="Your Email Address"
                    required
                  >
                  <button type="submit" class="newsletter-form__button field__button button" name="commit" id="Subscribe" aria-label="{{ 'newsletter.button_label' | t }}"
                    style="color:{{ block.settings.button_text }}; background:{{ block.settings.button_background }};">
                    Sign Me Up
                  </button>
                </div>
                {%- if form.errors -%}
                  <small class="newsletter-form__message form__message" id="Newsletter-error--{{ section.id }}">{% render 'icon-error' %}{{ form.errors.translated_fields['email'] | capitalize }} {{ form.errors.messages['email'] }}</small>
                {%- endif -%}
              </div>
              {%- if form.posted_successfully? -%}
                <h3 class="newsletter-form__message newsletter-form__message--success form__message" id="Newsletter-success--{{ section.id }}" tabindex="-1" autofocus>{% render 'icon-success' %}{{ 'newsletter.success' | t }}</h3>
              {%- endif -%}
            {% endform %}
          </div>
          {% else %}
          <div class="grid__item">
            {{ block.settings.HTML }}
          </div>
          {% endif %}
      {%- endcase -%}
    {%- endfor -%}
   </div>
  </div>
</div>
<script>
  if(document.querySelector(".scroll-count-section")){
  const counter = document.getElementById('dynamic-counter');
  const targetCount = parseInt(counter.getAttribute('data-count'), 10);
  let currentCount = 0;
  
  const updateCounter = () => {
    const section = counter.closest('.scroll-count-section');
    const sectionTop = section.getBoundingClientRect().top;
    const windowHeight = window.innerHeight;
  
    
    if (sectionTop < windowHeight && currentCount < targetCount) {
      const increment = Math.ceil(targetCount / 100); 
      currentCount += increment;
  
     
      if (currentCount > targetCount) {
        currentCount = targetCount;
      }
  
      counter.textContent = currentCount.toLocaleString();
  
     
      setTimeout(updateCounter, 300);
    }
  };
  
  
  window.addEventListener('scroll', updateCounter);
}
</script>

{% schema %}
{
  "name": "t:sections.newsletter.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "full_width",
      "default": false,
      "label": "Make section narrow width"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default":"#000"
    },
    {
      "type": "color",
      "id":"background_color",
      "label": "Background color",
      "default":"#fff"
    },
    {
      "type": "paragraph",
      "content": "t:sections.newsletter.settings.paragraph.content"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.newsletter.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "textarea",
          "id": "heading",
          "default": "Join ||12000|| our mailing list and stay updated",
          "label": "t:sections.newsletter.blocks.heading.settings.heading.label",
          "info": "Use ||1000|| to display counter number"
        }
      ]
    },
    {
      "type": "email_form",
      "name": "t:sections.newsletter.blocks.email_form.name",
      "limit": 1,
      "settings": [
        {
            "type": "header",
            "content": "button"
        },
        {
          "type": "color",
          "id": "button_text",
          "label": "Text color",
          "default":"#fff"
        },
        {
          "type": "color",
          "id":"button_background",
          "label": "Background color",
          "default":"#000"
        },
        {
          "type": "html",
          "id": "HTML",
          "label": "HTML"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.newsletter.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "email_form"
        }
      ]
    }
  ]
}
{% endschema %}
